{"ast":null,"code":"var _jsxFileName = \"/Users/nhicung/Documents/cung-design/src/components/GridTile.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nconst useStyles = makeStyles(theme => ({\n  // root: {\n  //   display: 'flex',\n  //   flexWrap: 'wrap',\n  //   justifyContent: 'space-around',\n  //   overflow: 'hidden',\n  //   backgroundColor: theme.palette.background.paper,\n  // },\n  // gridList: {\n  //   flexWrap: 'nowrap',\n  //   // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n  //   transform: 'translateZ(0)',\n  // },\n  root: {\n    height: '30%',\n    width: '50%'\n  },\n  title: {\n    color: 'white'\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  },\n  imgFullWidth: {\n    '&:hover': {\n      color: '#d4d0c6'\n    }\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    height: '70%',\n    width: '70%',\n    verticalAlign: 'middle',\n    display: 'flex',\n    flexDirection: 'row',\n    // border: '2px solid #000',\n    // boxShadow: theme.shadows[5],\n    padding: theme.spacing(4, 4, 4)\n  },\n  frame: {\n    height: '80%',\n    width: '80%'\n  },\n  description: {\n    padding: '20px',\n    width: '50%',\n    color: '#665544'\n  }\n}));\nexport default function GridTile(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <GridListTile key={props.tile.img}\n    //   classes={{\n    //       root: classes.root,\n    //   }}\n    // >\n    //     <img src={props.tile.img} alt={props.tile.title} onClick={handleOpen}/>\n    //     <GridListTileBar\n    //       title={props.tile.title}\n    //       actionIcon={\n    //           <IconButton aria-label={`star ${props.tile.title}`}>\n    //           <StarBorderIcon className={classes.title} />\n    //           </IconButton>\n    //       } />\n    //     <Modal\n    //         aria-labelledby=\"transition-modal-title\"\n    //         // aria-describedby=\"transition-modal-description\"\n    //         className={classes.modal}\n    //         open={open}\n    //         onClose={handleClose}\n    //         closeAfterTransition\n    //         BackdropComponent={Backdrop}\n    //         BackdropProps={{\n    //         timeout: 500,\n    //         }}\n    //     >\n    //         <Fade in={open}>\n    //         <div className={classes.paper}>\n    //             {/* {tileData.map((title) => (\n    //             <div key={title.img}> */}\n    //             < img src={props.tile.img} alt={props.tile.title} width=\"600px\" height=\"400px\"id=\"transition-modal-title\"/>\n    //             {/* </div>))} */}\n    //         </div>\n    //         </Fade>\n    //     </Modal>\n    // </GridListTile>\n    React.createElement(GridListTile, {\n      key: props.tile.img,\n      cols: props.tile.cols || 1,\n      classes: {\n        root: classes.root\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: props.tile.img,\n      alt: props.tile.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(GridListTileBar, {\n      title: props.tile.title,\n      subtitle: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, \"by: \", props.tile.author),\n      actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": `info about ${props.tile.title}`,\n        className: classes.icon,\n        onClick: handleOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InfoIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      \"aria-labelledby\": \"transition-modal-title\" // aria-describedby=\"transition-modal-description\"\n      ,\n      className: classes.modal,\n      open: open,\n      onClose: handleClose,\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Fade, {\n      in: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.frame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: props.tile.img,\n      alt: props.tile.title,\n      height: \"100%\",\n      width: \"100%\",\n      id: \"transition-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, \"Type of Paint: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Type of Paper: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, \"Inspired by: \"))))))\n  );\n}","map":{"version":3,"sources":["/Users/nhicung/Documents/cung-design/src/components/GridTile.js"],"names":["React","makeStyles","GridListTile","GridListTileBar","IconButton","InfoIcon","Modal","Backdrop","Fade","useStyles","theme","root","height","width","title","color","titleBar","background","imgFullWidth","icon","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","verticalAlign","flexDirection","padding","spacing","frame","description","GridTile","props","classes","open","setOpen","useState","handleOpen","handleClose","tile","img","cols","author","timeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\n\nconst useStyles = makeStyles((theme) => ({\n    // root: {\n    //   display: 'flex',\n    //   flexWrap: 'wrap',\n    //   justifyContent: 'space-around',\n    //   overflow: 'hidden',\n    //   backgroundColor: theme.palette.background.paper,\n    // },\n    // gridList: {\n    //   flexWrap: 'nowrap',\n    //   // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    //   transform: 'translateZ(0)',\n    // },\n    root: {\n        height: '30%',\n        width: '50%',\n    },\n\n    title: {\n      color: 'white',\n    },\n\n    titleBar: {\n      background:\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n\n    imgFullWidth : {\n      '&:hover': { \n          color: '#d4d0c6',\n      }\n    },\n\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)',\n    },\n\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      height: '70%',\n      width: '70%',\n      verticalAlign: 'middle',\n      display: 'flex',\n      flexDirection: 'row',\n      // border: '2px solid #000',\n      // boxShadow: theme.shadows[5],\n      padding: theme.spacing(4, 4, 4),\n    },\n\n    frame: {\n      height:'80%',\n      width: '80%',\n    },\n\n    description: {\n      padding: '20px',\n      width: '50%',\n      color: '#665544',\n  },\n\n  }));\n\nexport default function GridTile(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n    setOpen(true);\n    };\n\n    const handleClose = () => {\n    setOpen(false);\n    };\n\n\n    return (\n        // <GridListTile key={props.tile.img}\n        //   classes={{\n        //       root: classes.root,\n        //   }}\n        // >\n        //     <img src={props.tile.img} alt={props.tile.title} onClick={handleOpen}/>\n        //     <GridListTileBar\n        //       title={props.tile.title}\n              \n        //       actionIcon={\n        //           <IconButton aria-label={`star ${props.tile.title}`}>\n        //           <StarBorderIcon className={classes.title} />\n        //           </IconButton>\n        //       } />\n        //     <Modal\n        //         aria-labelledby=\"transition-modal-title\"\n        //         // aria-describedby=\"transition-modal-description\"\n        //         className={classes.modal}\n        //         open={open}\n        //         onClose={handleClose}\n        //         closeAfterTransition\n        //         BackdropComponent={Backdrop}\n        //         BackdropProps={{\n        //         timeout: 500,\n        //         }}\n        //     >\n        //         <Fade in={open}>\n        //         <div className={classes.paper}>\n        //             {/* {tileData.map((title) => (\n        //             <div key={title.img}> */}\n        //             < img src={props.tile.img} alt={props.tile.title} width=\"600px\" height=\"400px\"id=\"transition-modal-title\"/>\n        //             {/* </div>))} */}\n        //         </div>\n        //         </Fade>\n        //     </Modal>\n        // </GridListTile>\n\n        <GridListTile key={props.tile.img} cols={props.tile.cols || 1}\n          classes={{\n          root: classes.root,\n        }}>\n          \n        <img src={props.tile.img} alt={props.tile.title} />\n        <GridListTileBar\n          title={props.tile.title}\n          subtitle={<span>by: {props.tile.author}</span>}\n          actionIcon={\n            <IconButton aria-label={`info about ${props.tile.title}`} className={classes.icon} onClick={handleOpen}>\n              <InfoIcon />\n            </IconButton>\n          }\n        />\n        <Modal\n                aria-labelledby=\"transition-modal-title\"\n                // aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                <div className={classes.paper}>\n                  <div className ={classes.frame}>\n                    < img src={props.tile.img}\n                    alt={props.tile.title} \n                    height='100%'\n                    width= '100%'\n                    id=\"transition-modal-title\"/>\n                  </div>\n                  <div className={classes.description}>\n                    <h5>Name:</h5>\n                    <p>Type of Paint: </p>\n                    <p>Type of Paper: </p>\n                    <p>Inspired by: </p>\n                    {/* <Link to=\"/about\"><StyleButton> Read More</StyleButton></Link> */}\n                  </div>\n                </div>\n                </Fade>\n        </Modal>\n        </GridListTile>\n    )\n}"]},"metadata":{},"sourceType":"module"}