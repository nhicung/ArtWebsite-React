{"ast":null,"code":"import _slicedToArray from\"/Users/nhicung/Documents/cung-design/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import GridListTile from'@material-ui/core/GridListTile';import GridListTileBar from'@material-ui/core/GridListTileBar';import IconButton from'@material-ui/core/IconButton';import InfoIcon from'@material-ui/icons/Info';import Modal from'@material-ui/core/Modal';import Backdrop from'@material-ui/core/Backdrop';import Fade from'@material-ui/core/Fade';var useStyles=makeStyles(function(theme){return{// root: {\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   justifyContent: 'space-around',\n//   overflow: 'hidden',\n//   backgroundColor: theme.palette.background.paper,\n// },\n// gridList: {\n//   flexWrap: 'nowrap',\n//   // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n//   transform: 'translateZ(0)',\n// },\nroot:{height:'30%',width:'50%'},title:{color:'white'},titleBar:{background:'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'},imgFullWidth:{'&:hover':{color:'#d4d0c6'}},icon:{color:'rgba(255, 255, 255, 0.54)'},modal:{display:'flex',alignItems:'center',justifyContent:'center'},paper:{backgroundColor:theme.palette.background.paper,height:'70%',width:'70%',verticalAlign:'middle',display:'flex',flexDirection:'row',// border: '2px solid #000',\n// boxShadow: theme.shadows[5],\npadding:theme.spacing(4,4,4)},frame:{height:'80%',width:'80%'},description:{padding:'20px',width:'50%',color:'#665544'}};});export default function GridTile(props){var classes=useStyles();var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var handleOpen=function handleOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};return/*#__PURE__*/ (// <GridListTile key={props.tile.img}\n//   classes={{\n//       root: classes.root,\n//   }}\n// >\n//     <img src={props.tile.img} alt={props.tile.title} onClick={handleOpen}/>\n//     <GridListTileBar\n//       title={props.tile.title}\n//       actionIcon={\n//           <IconButton aria-label={`star ${props.tile.title}`}>\n//           <StarBorderIcon className={classes.title} />\n//           </IconButton>\n//       } />\n//     <Modal\n//         aria-labelledby=\"transition-modal-title\"\n//         // aria-describedby=\"transition-modal-description\"\n//         className={classes.modal}\n//         open={open}\n//         onClose={handleClose}\n//         closeAfterTransition\n//         BackdropComponent={Backdrop}\n//         BackdropProps={{\n//         timeout: 500,\n//         }}\n//     >\n//         <Fade in={open}>\n//         <div className={classes.paper}>\n//             {/* {tileData.map((title) => (\n//             <div key={title.img}> */}\n//             < img src={props.tile.img} alt={props.tile.title} width=\"600px\" height=\"400px\"id=\"transition-modal-title\"/>\n//             {/* </div>))} */}\n//         </div>\n//         </Fade>\n//     </Modal>\n// </GridListTile>\nReact.createElement(GridListTile,{key:props.tile.img,cols:props.tile.cols||1,classes:{root:classes.root}},/*#__PURE__*/React.createElement(\"img\",{src:props.tile.img,alt:props.tile.title}),/*#__PURE__*/React.createElement(GridListTileBar,{title:props.tile.title,subtitle:/*#__PURE__*/React.createElement(\"span\",null,\"by: \",props.tile.author),actionIcon:/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"info about \".concat(props.tile.title),className:classes.icon,onClick:handleOpen},/*#__PURE__*/React.createElement(InfoIcon,null))}),/*#__PURE__*/React.createElement(Modal,{\"aria-labelledby\":\"transition-modal-title\"// aria-describedby=\"transition-modal-description\"\n,className:classes.modal,open:open,onClose:handleClose,closeAfterTransition:true,BackdropComponent:Backdrop,BackdropProps:{timeout:500}},/*#__PURE__*/React.createElement(Fade,{in:open},/*#__PURE__*/React.createElement(\"div\",{className:classes.paper},/*#__PURE__*/React.createElement(\"div\",{className:classes.frame},/*#__PURE__*/React.createElement(\"img\",{src:props.tile.img,alt:props.tile.title,height:\"100%\",width:\"100%\",id:\"transition-modal-title\"})),/*#__PURE__*/React.createElement(\"div\",{className:classes.description},/*#__PURE__*/React.createElement(\"h5\",null,\"Name:\"),/*#__PURE__*/React.createElement(\"p\",null,\"Type of Paint: \"),/*#__PURE__*/React.createElement(\"p\",null,\"Type of Paper: \"),/*#__PURE__*/React.createElement(\"p\",null,\"Inspired by: \")))))));}","map":{"version":3,"sources":["/Users/nhicung/Documents/cung-design/src/components/GridTile.js"],"names":["React","makeStyles","GridListTile","GridListTileBar","IconButton","InfoIcon","Modal","Backdrop","Fade","useStyles","theme","root","height","width","title","color","titleBar","background","imgFullWidth","icon","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","verticalAlign","flexDirection","padding","spacing","frame","description","GridTile","props","classes","useState","open","setOpen","handleOpen","handleClose","tile","img","cols","author","timeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\n\nconst useStyles = makeStyles((theme) => ({\n    // root: {\n    //   display: 'flex',\n    //   flexWrap: 'wrap',\n    //   justifyContent: 'space-around',\n    //   overflow: 'hidden',\n    //   backgroundColor: theme.palette.background.paper,\n    // },\n    // gridList: {\n    //   flexWrap: 'nowrap',\n    //   // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    //   transform: 'translateZ(0)',\n    // },\n    root: {\n        height: '30%',\n        width: '50%',\n    },\n\n    title: {\n      color: 'white',\n    },\n\n    titleBar: {\n      background:\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n\n    imgFullWidth : {\n      '&:hover': { \n          color: '#d4d0c6',\n      }\n    },\n\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)',\n    },\n\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      height: '70%',\n      width: '70%',\n      verticalAlign: 'middle',\n      display: 'flex',\n      flexDirection: 'row',\n      // border: '2px solid #000',\n      // boxShadow: theme.shadows[5],\n      padding: theme.spacing(4, 4, 4),\n    },\n\n    frame: {\n      height:'80%',\n      width: '80%',\n    },\n\n    description: {\n      padding: '20px',\n      width: '50%',\n      color: '#665544',\n  },\n\n  }));\n\nexport default function GridTile(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n    setOpen(true);\n    };\n\n    const handleClose = () => {\n    setOpen(false);\n    };\n\n\n    return (\n        // <GridListTile key={props.tile.img}\n        //   classes={{\n        //       root: classes.root,\n        //   }}\n        // >\n        //     <img src={props.tile.img} alt={props.tile.title} onClick={handleOpen}/>\n        //     <GridListTileBar\n        //       title={props.tile.title}\n              \n        //       actionIcon={\n        //           <IconButton aria-label={`star ${props.tile.title}`}>\n        //           <StarBorderIcon className={classes.title} />\n        //           </IconButton>\n        //       } />\n        //     <Modal\n        //         aria-labelledby=\"transition-modal-title\"\n        //         // aria-describedby=\"transition-modal-description\"\n        //         className={classes.modal}\n        //         open={open}\n        //         onClose={handleClose}\n        //         closeAfterTransition\n        //         BackdropComponent={Backdrop}\n        //         BackdropProps={{\n        //         timeout: 500,\n        //         }}\n        //     >\n        //         <Fade in={open}>\n        //         <div className={classes.paper}>\n        //             {/* {tileData.map((title) => (\n        //             <div key={title.img}> */}\n        //             < img src={props.tile.img} alt={props.tile.title} width=\"600px\" height=\"400px\"id=\"transition-modal-title\"/>\n        //             {/* </div>))} */}\n        //         </div>\n        //         </Fade>\n        //     </Modal>\n        // </GridListTile>\n\n        <GridListTile key={props.tile.img} cols={props.tile.cols || 1}\n          classes={{\n          root: classes.root,\n        }}>\n          \n        <img src={props.tile.img} alt={props.tile.title} />\n        <GridListTileBar\n          title={props.tile.title}\n          subtitle={<span>by: {props.tile.author}</span>}\n          actionIcon={\n            <IconButton aria-label={`info about ${props.tile.title}`} className={classes.icon} onClick={handleOpen}>\n              <InfoIcon />\n            </IconButton>\n          }\n        />\n        <Modal\n                aria-labelledby=\"transition-modal-title\"\n                // aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                <div className={classes.paper}>\n                  <div className ={classes.frame}>\n                    < img src={props.tile.img}\n                    alt={props.tile.title} \n                    height='100%'\n                    width= '100%'\n                    id=\"transition-modal-title\"/>\n                  </div>\n                  <div className={classes.description}>\n                    <h5>Name:</h5>\n                    <p>Type of Paint: </p>\n                    <p>Type of Paper: </p>\n                    <p>Inspired by: </p>\n                    {/* <Link to=\"/about\"><StyleButton> Read More</StyleButton></Link> */}\n                  </div>\n                </div>\n                </Fade>\n        </Modal>\n        </GridListTile>\n    )\n}"]},"metadata":{},"sourceType":"module"}