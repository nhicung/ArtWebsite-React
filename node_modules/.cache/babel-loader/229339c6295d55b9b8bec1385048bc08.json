{"ast":null,"code":"var _jsxFileName = \"/Users/nhicung/Documents/GitHub/CungDesign/src/components/GridTile.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '30%',\n    width: '50%' // '&:hover':{\n    //   color: '#e6e6e6',\n    //   cursor: 'pointer',\n    // }\n\n  },\n  title: {\n    color: 'white',\n    fontSize: '18'\n  },\n  titleBar: {\n    width: '90%',\n    margin: 'auto',\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  },\n  space: {\n    height: '100%',\n    width: '100%',\n    textAlign: 'center',\n    paddingTop: '20px',\n    '&:hover': {\n      color: '#e6e6e6',\n      cursor: 'pointer'\n    }\n  },\n  imgIdle: {\n    // maxHeight: '80%',\n    maxWidth: '90%'\n  },\n  imgHover: {\n    backgroundColor: '#ffffff',\n    maxWidth: '90%',\n    '&:hover': {\n      backgroundColor: '#e6e6e6',\n      cursor: 'pointer'\n    }\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    height: '60%',\n    width: '70%',\n    verticalAlign: 'middle',\n    display: 'flex',\n    flexDirection: 'row',\n    padding: theme.spacing(4, 4, 4)\n  },\n  frame: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: '#ECECEC'\n  },\n  img: {\n    maxHeight: '100%',\n    maxWidth: '100%'\n  },\n  description: {\n    padding: '20px',\n    width: '50%',\n    color: '#665544'\n  }\n}));\nexport default function GridTile(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(GridListTile, {\n    key: props.tile.img,\n    cols: props.tile.cols || 1,\n    classes: {\n      root: classes.root\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.space,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.imgIdle,\n    src: props.tile.img,\n    alt: props.tile.title,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imgHover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GridListTileBar, {\n    className: classes.titleBar,\n    title: props.tile.title,\n    actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": `info about ${props.tile.title}`,\n      className: classes.icon,\n      onClick: handleOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InfoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\" // aria-describedby=\"transition-modal-description\"\n    ,\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.frame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.tile.img,\n    className: classes.img,\n    alt: props.tile.title //maxHeight=\"300px\"\n    //width= '100%'\n    ,\n    id: \"transition-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"Type of Paint: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"Type of Paper: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"Inspired by: \"))))));\n}","map":{"version":3,"sources":["/Users/nhicung/Documents/GitHub/CungDesign/src/components/GridTile.js"],"names":["React","makeStyles","GridListTile","GridListTileBar","IconButton","InfoIcon","Modal","Backdrop","Fade","useStyles","theme","root","height","width","title","color","fontSize","titleBar","margin","background","space","textAlign","paddingTop","cursor","imgIdle","maxWidth","imgHover","backgroundColor","icon","modal","display","alignItems","justifyContent","paper","palette","verticalAlign","flexDirection","padding","spacing","frame","img","maxHeight","description","GridTile","props","classes","open","setOpen","useState","handleOpen","handleClose","tile","cols","timeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '30%',\n    width: '50%',\n    // '&:hover':{\n    //   color: '#e6e6e6',\n    //   cursor: 'pointer',\n    // }\n  },\n\n  title: {\n    color: 'white',\n    fontSize:'18',\n  },\n\n  titleBar: {\n    width:'90%',\n    margin: 'auto',\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n\n  space: {\n    height: '100%',\n    width: '100%',\n    textAlign: 'center',\n    paddingTop: '20px',\n    '&:hover': {\n      color: '#e6e6e6',\n      cursor: 'pointer',\n    }\n  },\n\n  imgIdle: {\n    // maxHeight: '80%',\n    maxWidth: '90%',\n    \n  },\n\n  imgHover:{\n    backgroundColor: '#ffffff',\n    maxWidth: '90%',\n    '&:hover': {\n      backgroundColor: '#e6e6e6',\n      cursor: 'pointer',\n    }\n  },\n\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    height: '60%',\n    width: '70%',\n    verticalAlign: 'middle',\n    display: 'flex',\n    flexDirection: 'row',\n    padding: theme.spacing(4, 4, 4),\n  },\n\n  frame: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: '#ECECEC',\n  },\n\n  img: {\n    maxHeight: '100%',\n    maxWidth: '100%',\n  },\n\n  description: {\n    padding: '20px',\n    width: '50%',\n    color: '#665544',\n  },\n\n}));\n\nexport default function GridTile(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <GridListTile key={props.tile.img} cols={props.tile.cols || 1}\n      classes={{\n        root: classes.root,\n      }}>\n      <div className = {classes.space} > \n        <img className ={classes.imgIdle} \n        src={props.tile.img} \n        alt={props.tile.title} \n        onClick={handleOpen} />\n        <div className = {classes.imgHover}></div>\n      \n        <GridListTileBar\n          className={classes.titleBar}\n          title={props.tile.title}\n          actionIcon={\n            <IconButton aria-label={`info about ${props.tile.title}`} className={classes.icon} onClick={handleOpen}>\n              <InfoIcon />\n            </IconButton>\n          }\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        // aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <div className={classes.frame}>\n              < img src={props.tile.img}\n                className={classes.img}\n                alt={props.tile.title}\n                //maxHeight=\"300px\"\n                //width= '100%'\n                id=\"transition-modal-title\" />\n            </div>\n            <div className={classes.description}>\n              <h5>Name:</h5>\n              <p>Type of Paint: </p>\n              <p>Type of Paper: </p>\n              <p>Inspired by: </p>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </GridListTile>\n  )\n}"]},"metadata":{},"sourceType":"module"}